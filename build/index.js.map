{"version":3,"sources":["../src/index.js"],"names":["channels","call","callback","error","assert","condition","msg","Error","Process","type","process","is","TypeError","isPromise","val","then","ProcessComms","options","env","NODE_ENV","Promise","actions","instance","_actions","Object","create","keys","forEach","action","registerAction","on","event","arg","actionExists","act","dispatchAction","target","payload","data","sender","send","console","log","err","getCurrentWindow","id","dispatchExternalAction","dispatch","boundDispatch","dispatchExternal","boundDispatchExternal","resolve","once","_target","_action","_payload","webContents","fromId","_caller","entry","length","all","map","handler","Array","isArray","push","cb","res"],"mappings":"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","file":"index.js","sourcesContent":["import { ipcMain, ipcRenderer, webContents, remote } from 'electron';\n\nconst channels = {\n\tcall: 'ProcessComms-Call',\n\tcallback: 'ProcessComms-Callback',\n\terror: 'ProcessComms-Error'\n};\n\nconst assert = (condition, msg) => {\n\tif (!condition) {\n\t\tthrow new Error(`[ProcessComms] ${msg}`);\n\t}\n}\n\n// determines process originating from\nconst Process = {\n\t// return the type of process as a string\n\ttype: () => {\n\t\t// running in browser\n\t\tif (typeof process === 'undefined') {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node-integration disabled\n\t\tif (!process) {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node.js\n\t\tif (!process.type) {\n\t\t\treturn 'main';\n\t\t}\n\n\t\treturn process.type === 'renderer' ? 'renderer' : 'main';\n\t},\n\t// explicit type checking\n\tis: (type) => {\n\t\tif (typeof type === 'string') {\n\t\t\treturn type === Process.type();\n\t\t} else {\n\t\t\tthrow new TypeError('type of `type` was not string');\n\t\t}\n\t}\n}\n\nconst isPromise = (val) => {\n\treturn val && typeof val.then === 'function';\n}\n\nclass ProcessComms {\n\tconstructor(options = {}) {\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tassert(typeof Promise !== 'undefined', 'ProcessComms requires Promises to function.');\n\t\t\tassert(this instanceof ProcessComms, 'ProcessComms must be called with the new operator.');\n\t\t}\n\n\t\tlet { actions={} } = options;\n\n\t\tconst instance = this;\n\n\t\tthis._actions = Object.create(null);\n\n\t\tObject.keys(actions).forEach((action) => {\n\t\t\tthis.registerAction(action, actions[action]);\n\t\t});\n\n\t\t// setup ipc action listeners\n\t\tif (Process.is('main')) {\n\t\t\t// main ipc listener\n\t\t\tipcMain.on(channels.call, (event, arg) => {\n\t\t\t\tif (instance.actionExists(arg.action)) {\n\t\t\t\t\tconst act = instance.dispatchAction({ process: arg.process, target: arg.target }, arg.action, arg.payload);\n\n\t\t\t\t\tif (isPromise(act)) {\n\t\t\t\t\t\tact.then((data) => {\n\t\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('[ProcessComms] Promise was not returned');\n\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t...arg\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.sender.send(channels.error, `[ProcessComms] unknown action in main process: ${arg.action}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// main error ipc listener\n\t\t\tipcMain.on(channels.error, (event, err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t} else if (Process.is('renderer')) {\n\t\t\t// renderer ipc listener\n\t\t\tipcRenderer.on(channels.call, (event, arg) => {\n\t\t\t\tif (instance.actionExists(arg.action)) {\n\t\t\t\t\tconst act = instance.dispatchAction({ process: arg.process, target: remote.getCurrentWindow().id }, arg.action, arg.payload);\n\n\t\t\t\t\tif (isPromise(act)) {\n\t\t\t\t\t\tact.then((data) => {\n\t\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\t\ttarget: remote.getCurrentWindow().id,\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('[ProcessComms] Promise was not returned');\n\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\ttarget: remote.getCurrentWindow().id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.sender.send(channels.error, `[ProcessComms] unknown action in renderer process: ${arg.action}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// renderer error ipc listener\n\t\t\tipcRenderer.on(channels.error, (event, err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t}\n\n\t\tconst { dispatchAction, dispatchExternalAction } = this;\n\n\t\t// setup dispatchers\n\t\tthis.dispatch = function boundDispatch (type, payload) {\n\t\t\treturn dispatchAction.call(instance, {\n\t\t\t\tprocess: Process.type(),\n\t\t\t\ttarget: Process.is('renderer') ? remote.getCurrentWindow().id : null\n\t\t\t}, type, payload);\n\t\t}\n\n\t\tthis.dispatchExternal = function boundDispatchExternal(target, action, payload) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tdispatchExternalAction.call(instance, target, action, payload);\n\n\t\t\t\tif (Process.is('main')) {\n\t\t\t\t\t// main callback ipc listener\n\t\t\t\t\treturn ipcMain.once(channels.callback, (event, arg) => {\n\t\t\t\t\t\tresolve(arg.data);\n\t\t\t\t\t});\n\t\t\t\t} else if (Process.is('renderer')) {\n\t\t\t\t\t// renderer callback ipc listener\n\t\t\t\t\treturn ipcRenderer.once(channels.callback, (event, arg) => {\n\t\t\t\t\t\tresolve(arg.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tactionExists(action) {\n\t\treturn !!this._actions[action];\n\t}\n\n\tdispatchExternalAction(_target, _action, _payload) {\n\t\tlet arg = {\n\t\t\tprocess: Process.type()\n\t\t}\n\n\t\tif (Process.is('main')) {\n\t\t\t// xor with ternary\n\t\t\tif (typeof _target === 'object' ? !(typeof _target === 'number') : typeof _target === 'number') {\n\t\t\t\tconsole.error('[ProcessComms] target BrowserWindow or BrowserWindow id not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_target = typeof _target === 'object' ? _target.webContents.id : _target\n\n\t\t\tif (typeof _action !== 'string') {\n\t\t\t\tconsole.error('[ProcessComms] action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _payload !== 'undefined') {\n\t\t\t\targ.payload = _payload;\n\t\t\t}\n\t\t\twebContents.fromId(_target).send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _action,\n\t\t\t\ttarget: _target\n\t\t\t});\n\t\t} else if (Process.is('renderer')) {\n\t\t\tif (typeof _target !== 'string') {\n\t\t\t\tconsole.error('[ProcessComms] action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _action !== 'undefined') {\n\t\t\t\targ.payload = _action;\n\t\t\t}\n\n\t\t\tipcRenderer.send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _target,\n\t\t\t\ttarget: remote.getCurrentWindow().id\n\t\t\t});\n\t\t}\n\t}\n\n\tdispatchAction(_caller, _action, _payload) {\n\t\tconst { action, payload } = {\n\t\t\taction: _action,\n\t\t\tpayload: _payload\n\t\t};\n\n\t\tconst entry = this._actions[action];\n\n\t\t// if no action was found\n\t\tif (!entry) {\n\t\t\t// show the error in the log from where it was called from\n\t\t\tif (_caller.process === Process.type()) {\n\t\t\t\tconsole.error(`[ProcessComms] unknown action: ${action}`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// return a promise of the action, passing in the payload\n\t\treturn entry.length > 1 ? Promise.all(entry.map(handler => handler(payload))) : entry[0](payload);\n\t}\n\n\tregisterAction(action, handler) {\n\t\tconst instance = this;\n\n\t\tconst entry = Array.isArray(instance._actions[action]) ? instance._actions[action] : instance._actions[action] = [];\n\n\t\tentry.push((payload, cb) => {\n\t\t\tlet res = handler({\n\t\t\t\tdispatch: instance.dispatch,\n\t\t\t\tdispatchExternal: instance.dispatchExternal\n\t\t\t}, payload, cb);\n\n\t\t\tif (!isPromise(res)) {\n\t\t\t\tres = Promise.resolve(res);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t});\n\t}\n}\n\nexport default ProcessComms"]}