{"version":3,"sources":["../src/index.js"],"names":["channels","call","callback","error","assert","condition","msg","Error","Process","type","process","is","TypeError","isPromise","val","then","ProcessComms","options","env","NODE_ENV","Promise","actions","instance","_actions","Object","create","actionListener","event","arg","actionExists","action","target","getCurrentWindow","id","act","dispatchAction","payload","data","sender","send","console","warn","emitter","on","err","dispatchExternalAction","dispatch","dispatchExternal","resolve","cb","once","keys","forEach","registerAction","_target","_action","_payload","webContents","fromId","_caller","entry","length","all","map","handler","Array","isArray","push","res"],"mappings":"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","file":"index.js","sourcesContent":["import { ipcMain, ipcRenderer, webContents, remote } from 'electron';\n\nconst channels = {\n\tcall: 'ProcessComms-Call',\n\tcallback: 'ProcessComms-Callback',\n\terror: 'ProcessComms-Error'\n};\n\nconst assert = (condition, msg) => {\n\tif (!condition) {\n\t\tthrow new Error(`[ProcessComms] ${msg}`);\n\t}\n}\n\n// determines process originating from\nconst Process = {\n\t// return the type of process as a string\n\ttype: () => {\n\t\t// running in browser\n\t\tif (typeof process === 'undefined') {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node-integration disabled\n\t\tif (!process) {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node.js\n\t\tif (!process.type) {\n\t\t\treturn 'main';\n\t\t}\n\n\t\treturn process.type === 'renderer' ? 'renderer' : 'main';\n\t},\n\t// explicit type checking\n\tis: (type) => {\n\t\tif (typeof type === 'string') {\n\t\t\treturn type === Process.type();\n\t\t} else {\n\t\t\tthrow new TypeError('type of `type` was not string');\n\t\t}\n\t}\n}\n\nconst isPromise = (val) => {\n\treturn val && typeof val.then === 'function';\n}\n\nclass ProcessComms {\n\tconstructor(options = {}) {\n\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\tassert(typeof Promise !== 'undefined', 'ProcessComms requires Promises to function.');\n\t\t\tassert(this instanceof ProcessComms, 'ProcessComms must be called with the new operator.');\n\t\t}\n\n\t\tlet { actions={} } = options;\n\n\t\tconst instance = this;\n\n\t\tthis._actions = Object.create(null);\n\n\t\tconst actionListener = (event, arg) => {\n\t\t\tif (instance.actionExists(arg.action)) {\n\t\t\t\tconst target = Process.is('renderer') ? remote.getCurrentWindow().id : arg.target;\n\n\t\t\t\tconst act = instance.dispatchAction({ ...arg, target }, arg.action, arg.payload);\n\n\t\t\t\tif (isPromise(act)) {\n\t\t\t\t\tact.then((data) => {\n\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('[ProcessComms] Promise was not returned');\n\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t...arg,\n\t\t\t\t\t\ttarget\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevent.sender.send(channels.error, `[ProcessComms] unknown action in ${Process.type()} process: ${arg.action}`);\n\t\t\t}\n\t\t}\n\n\t\tconst emitter = Process.is('main') ? ipcMain : ipcRenderer;\n\n\t\temitter.on(channels.call, actionListener);\n\t\temitter.on(channels.error, (event, err) => {\n\t\t\tconsole.error(err);\n\t\t});\n\n\t\tconst { dispatchAction, dispatchExternalAction } = this;\n\n\t\t// setup dispatchers\n\t\tthis.dispatch = (type, payload) => {\n\t\t\treturn dispatchAction.call(instance, {\n\t\t\t\tprocess: Process.type(),\n\t\t\t\ttarget: Process.is('renderer') ? remote.getCurrentWindow().id : null\n\t\t\t}, type, payload);\n\t\t}\n\n\t\tthis.dispatchExternal = (target, action, payload) => {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tdispatchExternalAction.call(instance, target, action, payload);\n\n\t\t\t\tconst cb = (event, arg) => {\n\t\t\t\t\tresolve(arg.data);\n\t\t\t\t}\n\n\t\t\t\tif (Process.is('main')) {\n\t\t\t\t\t// main callback ipc listener\n\t\t\t\t\treturn ipcMain.once(channels.callback, cb);\n\t\t\t\t} else if (Process.is('renderer')) {\n\t\t\t\t\t// renderer callback ipc listener\n\t\t\t\t\treturn ipcRenderer.once(channels.callback, cb);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(actions).forEach((action) => {\n\t\t\tthis.registerAction(action, actions[action]);\n\t\t});\n\t}\n\n\tactionExists(action) {\n\t\treturn !!this._actions[action];\n\t}\n\n\tdispatchExternalAction(_target, _action, _payload) {\n\t\tlet arg = {\n\t\t\tprocess: Process.type()\n\t\t}\n\n\t\tif (Process.is('main')) {\n\t\t\tif (typeof _target === 'object' || typeof _target === 'number') {} else {\n\t\t\t\tconsole.error('[ProcessComms] target BrowserWindow or BrowserWindow id not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_target = typeof _target === 'object' ? _target.webContents.id : _target\n\n\t\t\tif (typeof _action !== 'string') {\n\t\t\t\tconsole.error('[ProcessComms] action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _payload !== 'undefined') {\n\t\t\t\targ.payload = _payload;\n\t\t\t}\n\t\t\twebContents.fromId(_target).send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _action,\n\t\t\t\ttarget: _target\n\t\t\t});\n\t\t} else if (Process.is('renderer')) {\n\t\t\tif (typeof _target !== 'string') {\n\t\t\t\tconsole.error('[ProcessComms] action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _action !== 'undefined') {\n\t\t\t\targ.payload = _action;\n\t\t\t}\n\n\t\t\tipcRenderer.send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _target,\n\t\t\t\ttarget: remote.getCurrentWindow().id\n\t\t\t});\n\t\t}\n\t}\n\n\tdispatchAction(_caller, _action, _payload) {\n\t\tconst { action, payload } = {\n\t\t\taction: _action,\n\t\t\tpayload: _payload\n\t\t};\n\n\t\tconst entry = this._actions[action];\n\n\t\t// if no action was found\n\t\tif (!entry) {\n\t\t\t// show the error in the log from where it was called from\n\t\t\tif (_caller.process === Process.type()) {\n\t\t\t\tconsole.error(`[ProcessComms] unknown action: ${action}`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// return a promise of the action, passing in the payload\n\t\treturn entry.length > 1 ? Promise.all(entry.map(handler => handler(payload))) : entry[0](payload);\n\t}\n\n\tregisterAction(action, handler) {\n\t\tconst instance = this;\n\n\t\tconst entry = Array.isArray(instance._actions[action]) ? instance._actions[action] : instance._actions[action] = [];\n\n\t\tentry.push((payload, cb) => {\n\t\t\tlet res = handler({\n\t\t\t\tdispatch: instance.dispatch,\n\t\t\t\tdispatchExternal: instance.dispatchExternal\n\t\t\t}, payload, cb);\n\n\t\t\tif (!isPromise(res)) {\n\t\t\t\tres = Promise.resolve(res);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t});\n\t}\n}\n\nexport default ProcessComms"]}