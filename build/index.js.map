{"version":3,"sources":["../src/index.js"],"names":["channels","call","callback","error","Process","type","process","is","TypeError","isPromise","val","then","ProcessComms","options","actions","instance","_actions","Object","create","keys","forEach","action","registerAction","on","event","arg","actionExists","act","dispatchAction","target","payload","data","sender","send","console","log","err","getCurrentWindow","id","dispatchExternalAction","dispatch","boundDispatch","dispatchExternal","boundDispatchExternal","Promise","resolve","once","_target","_action","_payload","webContents","fromId","_caller","entry","length","all","map","handler","Array","isArray","push","cb","res"],"mappings":"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","file":"index.js","sourcesContent":["import { ipcMain, ipcRenderer, webContents, remote } from 'electron';\n\nconst channels = {\n\tcall: 'ProcessComms-Call',\n\tcallback: 'ProcessComms-Callback',\n\terror: 'ProcessComms-Error'\n};\n\n// determines process originating from\nconst Process = {\n\t// return the type of process as a string\n\ttype: () => {\n\t\t// running in browser\n\t\tif (typeof process === 'undefined') {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node-integration disabled\n\t\tif (!process) {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node.js\n\t\tif (!process.type) {\n\t\t\treturn 'main';\n\t\t}\n\n\t\treturn process.type === 'renderer' ? 'renderer' : 'main';\n\t},\n\t// explicit type checking\n\tis: (type) => {\n\t\tif (typeof type === 'string') {\n\t\t\treturn type === Process.type();\n\t\t} else {\n\t\t\tthrow new TypeError('type of `type` was not string');\n\t\t}\n\t}\n}\n\nconst isPromise = (val) => {\n\treturn val && typeof val.then === 'function';\n}\n\nclass ProcessComms {\n\tconstructor(options = {}) {\n\t\tlet { actions = {} } = options;\n\n\t\tconst instance = this;\n\n\t\tthis._actions = Object.create(null);\n\n\t\tObject.keys(actions).forEach((action) => {\n\t\t\tthis.registerAction(action, actions[action]);\n\t\t});\n\n\t\t// setup ipc listeners\n\t\tif (Process.is('main')) {\n\t\t\t// main ipc listener\n\t\t\tipcMain.on(channels.call, (event, arg) => {\n\t\t\t\tif (instance.actionExists(arg.action)) {\n\t\t\t\t\tconst act = instance.dispatchAction({ process: arg.process, target: arg.target }, arg.action, arg.payload);\n\n\t\t\t\t\tif (isPromise(act)) {\n\t\t\t\t\t\tact.then((data) => {\n\t\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Promise was not returned');\n\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t...arg\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.sender.send(channels.error, `unknown action in main process: ${arg.action}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// main error ipc listener\n\t\t\tipcMain.on(channels.error, (event, err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t} else if (Process.is('renderer')) {\n\t\t\t// renderer ipc listener\n\t\t\tipcRenderer.on(channels.call, (event, arg) => {\n\t\t\t\tif (instance.actionExists(arg.action)) {\n\t\t\t\t\tconst act = instance.dispatchAction({ process: arg.process, target: remote.getCurrentWindow().id }, arg.action, arg.payload);\n\n\t\t\t\t\tif (isPromise(act)) {\n\t\t\t\t\t\tact.then((data) => {\n\t\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\t\ttarget: remote.getCurrentWindow().id,\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Promise was not returned');\n\t\t\t\t\t\tevent.sender.send(channels.callback, {\n\t\t\t\t\t\t\t...arg,\n\t\t\t\t\t\t\ttarget: remote.getCurrentWindow().id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tevent.sender.send(channels.error, `unknown action in renderer process: ${arg.action}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// renderer error ipc listener\n\t\t\tipcRenderer.on(channels.error, (event, err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t}\n\n\t\tconst { dispatchAction, dispatchExternalAction } = this;\n\n\t\t// setup dispatchers\n\t\tthis.dispatch = function boundDispatch (type, payload) {\n\t\t\treturn dispatchAction.call(instance, {\n\t\t\t\tprocess: Process.type(),\n\t\t\t\ttarget: Process.is('renderer') ? remote.getCurrentWindow().id : null\n\t\t\t}, type, payload);\n\t\t}\n\n\t\tthis.dispatchExternal = function boundDispatchExternal(target, action, payload) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tdispatchExternalAction.call(instance, target, action, payload);\n\n\t\t\t\tif (Process.is('main')) {\n\t\t\t\t\t// main callback ipc listener\n\t\t\t\t\treturn ipcMain.once(channels.callback, (event, arg) => {\n\t\t\t\t\t\tresolve(arg.data);\n\t\t\t\t\t});\n\t\t\t\t} else if (Process.is('renderer')) {\n\t\t\t\t\t// renderer callback ipc listener\n\t\t\t\t\treturn ipcRenderer.once(channels.callback, (event, arg) => {\n\t\t\t\t\t\tresolve(arg.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tactionExists(action) {\n\t\treturn !!this._actions[action];\n\t}\n\n\tdispatchExternalAction(_target, _action, _payload) {\n\t\tlet arg = {\n\t\t\tprocess: Process.type()\n\t\t}\n\n\t\tif (Process.is('main')) {\n\t\t\tif (typeof _target === 'object' || typeof _target === 'number') {} else {\n\t\t\t\tconsole.error('target BrowserWindow not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_target = typeof _target === 'object' ? _target.webContents.id : _target\n\n\t\t\tif (typeof _action !== 'string') {\n\t\t\t\tconsole.error('action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _payload !== 'undefined') {\n\t\t\t\targ.payload = _payload;\n\t\t\t}\n\t\t\twebContents.fromId(_target).send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _action,\n\t\t\t\ttarget: _target\n\t\t\t});\n\t\t} else if (Process.is('renderer')) {\n\t\t\tif (typeof _target !== 'string') {\n\t\t\t\tconsole.error('action not passed as parameter');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof _action !== 'undefined') {\n\t\t\t\targ.payload = _action;\n\t\t\t}\n\n\t\t\tipcRenderer.send(channels.call, {\n\t\t\t\t...arg,\n\t\t\t\taction: _target,\n\t\t\t\ttarget: remote.getCurrentWindow().id\n\t\t\t});\n\t\t}\n\t}\n\n\tdispatchAction(_caller, _action, _payload) {\n\t\tconst { action, payload } = {\n\t\t\taction: _action,\n\t\t\tpayload: _payload\n\t\t};\n\n\t\tconst entry = this._actions[action];\n\n\t\t// if no action was found\n\t\tif (!entry) {\n\t\t\t// show the error in the log from where it was called from\n\t\t\tif (_caller.process === Process.type()) {\n\t\t\t\tconsole.error(`unknown action: ${action}`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// return a promise of the action, passing in the payload\n\t\treturn entry.length > 1 ? Promise.all(entry.map(handler => handler(payload))) : entry[0](payload);\n\t}\n\n\tregisterAction(action, handler) {\n\t\tconst instance = this;\n\n\t\tconst entry = Array.isArray(instance._actions[action]) ? instance._actions[action] : instance._actions[action] = [];\n\n\t\tentry.push((payload, cb) => {\n\t\t\tlet res = handler({\n\t\t\t\tdispatch: instance.dispatch,\n\t\t\t\tdispatchExternal: instance.dispatchExternal\n\t\t\t}, payload, cb);\n\n\t\t\tif (!isPromise(res)) {\n\t\t\t\tres = Promise.resolve(res);\n\t\t\t}\n\n\t\t\treturn res;\n\t\t})\n\t}\n}\n\nexport default ProcessComms"]}