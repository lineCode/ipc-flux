{"version":3,"sources":["../src/utils.js"],"names":["isPromise","val","then","assert","condition","msg","Error","Promise","prototype","fulfilled","status","pending","rejected","result","v","e","MakeQuerablePromise","promise","isResolved","isPending","isRejected","isFulfilled","Process","type","process","is","env","NODE_ENV"],"mappings":"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","file":"utils.js","sourcesContent":["const isPromise = (val) => {\n\treturn val && typeof val.then === 'function';\n}\n\nconst assert = (condition, msg) => {\n\tif (!condition) {\n\t\tthrow new Error(`[IpcFlux] ${msg}`);\n\t}\n}\n\nPromise.prototype.fulfilled = function () {\n\tlet status = {\n\t\tpending: true,\n\t\trejected: false,\n\t\tfulfilled: false\n\t};\n\n\tconst result = this.then((v) => {\n\t\tstatus.fulfilled = true;\n\t\tstatus.pending = false;\n\t\treturn v;\n\t}, (e) => {\n\t\tstatus.rejected = true;\n\t\tstatus.pending = false;\n\t\tthrow e;\n\t});\n\n\treturn status.fulfilled;\n}\n\nPromise.prototype.pending = function () {\n\tlet status = {\n\t\tpending: true,\n\t\trejected: false,\n\t\tfulfilled: false\n\t};\n\n\tconst result = this.then((v) => {\n\t\tstatus.fulfilled = true;\n\t\tstatus.pending = false;\n\t\treturn v;\n\t}, (e) => {\n\t\tstatus.rejected = true;\n\t\tstatus.pending = false;\n\t\tthrow e;\n\t});\n\n\treturn status.pending;\n}\n\nPromise.prototype.rejected = function () {\n\tlet status = {\n\t\tpending: true,\n\t\trejected: false,\n\t\tfulfilled: false\n\t};\n\n\tconst result = this.then((v) => {\n\t\tstatus.fulfilled = true;\n\t\tstatus.pending = false;\n\t\treturn v;\n\t}, (e) => {\n\t\tstatus.rejected = true;\n\t\tstatus.pending = false;\n\t\tthrow e;\n\t});\n\n\treturn status.rejected;\n}\n\nfunction MakeQuerablePromise(promise) {\n    // Don't modify any promise that has been already modified.\n    if (promise.isResolved) return promise;\n\n    // Set initial state\n    var isPending = true;\n    var isRejected = false;\n    var isFulfilled = false;\n\n    // Observe the promise, saving the fulfillment in a closure scope.\n    var result = promise.then(\n        function(v) {\n            isFulfilled = true;\n            isPending = false;\n            return v;\n        },\n        function(e) {\n            isRejected = true;\n            isPending = false;\n            throw e;\n        }\n    );\n\n    result.isFulfilled = function() { return isFulfilled; };\n    result.isPending = function() { return isPending; };\n    result.isRejected = function() { return isRejected; };\n    return result;\n}\n\n// determines process originating from\nconst Process = {\n\t// return the type of process as a string\n\ttype: () => {\n\t\t// running in browser/electron window\n\t\tif (typeof process === 'undefined') {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node-integration disabled\n\t\tif (!process) {\n\t\t\treturn 'renderer';\n\t\t}\n\n\t\t// node.js\n\t\tif (!process.type) {\n\t\t\treturn 'main';\n\t\t}\n\n\t\treturn process.type === 'renderer' ? 'renderer' : 'main';\n\t},\n\t// explicit process type checking\n\tis: (type) => {\n\t\treturn type === Process.type();\n\t},\n\t// environment checking\n\tenv: {\n\t\ttype: () => {\n\t\t\tif (typeof process === 'undefined') {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (typeof process !== 'object') {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (typeof process.env !== 'object') {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (typeof process.env.NODE_ENV === 'undefined') {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn process.env.NODE_ENV\n\t\t},\n\t\tis: (type) => {\n\t\t\treturn type === Process.env.type();\n\t\t}\n\t}\n}\n\nexport default {\n\tisPromise,\n\tassert,\n\tProcess\n}"]}